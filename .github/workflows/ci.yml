name: CI

on:
  push:
    branches: ['**']
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  quality:
    name: Code Quality & Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        env:
          CI: true

      - name: Check code formatting
        run: npm run format:check
        env:
          CI: true

      - name: Type check
        run: |
          if [ -f "tsconfig.json" ] || [ -f "jsconfig.json" ]; then
            echo "Running type check..."
            if command -v vue-tsc &> /dev/null; then
              npx vue-tsc --noEmit
            else
              echo "Skipping type check - vue-tsc not available"
            fi
          else
            echo "Skipping type check - no TypeScript config found"
          fi
        env:
          CI: true

      - name: Install Playwright browsers
        run: |
          npx playwright install --with-deps chromium
          npx playwright install chromium --force

      - name: Run comprehensive quality checks
        if: github.event_name == 'pull_request'
        run: npm run quality:check
        env:
          CI: true

      - name: Run tests with coverage
        run: npm run test:coverage --silent
        env:
          CI: true
          FORCE_COLOR: 1

      - name: Upload coverage reports to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage
          fail_ci_if_error: false
          verbose: true

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage/**
            .vitest/coverage/**
          retention-days: 30

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: quality
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          CI: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/spa

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
