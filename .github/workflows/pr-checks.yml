name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write

jobs:
  comprehensive-checks:
    name: Comprehensive Quality Checks
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for checking changes

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run all quality checks
        run: npm run quality:check
        env:
          CI: true

      - name: Check for complexity violations
        run: |
          echo "Checking for ESLint complexity violations..."
          npm run lint -- --format=json > lint-results.json || true

          # Check if there are any complexity violations
          if grep -q "complexity" lint-results.json; then
            echo "❌ Complexity violations found:"
            npm run lint
            exit 1
          else
            echo "✅ No complexity violations found"
          fi

      - name: Validate test coverage
        run: |
          npm run test:coverage --silent

          # Check coverage thresholds (adjust as needed)
          echo "Checking coverage thresholds..."
          if [ -f "coverage/coverage-summary.json" ]; then
            echo "✅ Coverage report generated successfully"
          else
            echo "❌ Coverage report not found"
            exit 1
          fi

      - name: Comment PR with quality status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let message = '## 🔍 Code Quality Report\n\n';

            // Add status based on job results
            if (process.env.GITHUB_JOB_STATUS === 'success') {
              message += '✅ All quality checks passed!\n\n';
              message += '- ESLint: No violations\n';
              message += '- Prettier: Code properly formatted\n';
              message += '- Tests: All passing with coverage\n';
              message += '- Complexity: Within acceptable limits\n';
            } else {
              message += '❌ Some quality checks failed. Please review the logs above.\n\n';
            }

            message += '\n---\n*This comment is automatically generated by the quality check workflow.*';

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(comment => 
              comment.body.includes('Code Quality Report')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: message
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            }
